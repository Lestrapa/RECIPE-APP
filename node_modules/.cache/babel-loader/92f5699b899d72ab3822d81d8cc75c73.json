{"ast":null,"code":"var _jsxFileName = \"/home/charles/Documents/ReactJS/Recipe-App/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () => {\n  const API_ID = \"d7a5a694\";\n  const API_KEY = \"286e3bf218dfffc0781b1a3e14833cb5\";\n  const [recipes, setRecipes] = useState([]); //! recipe adalah data | setRecepies untuk men-set data / mencari data\n\n  const [search, setSearch] = useState(''); //! useState(default value | nilai awal)\n\n  const [query, setQuery] = useState('chicken'); //! property untuk Submit\n  // ! digunakan untuk fetch data, dimana setiap halaman di-reload maka useEffect dijalankan untuk mengambil data\n  // 2. jalankan method useEffect ketika halaman di-reload\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]); // [query] adalah parameter untuk meng-update data otomatis ketika mengetikan di pencarian\n  // 1. Ambil data dari API\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits); // ! untuk men-set data dari API\n\n    console.log(data.hits);\n  }; // 4. set even | e adalah event\n\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault(); // menghilangkan sifat asli dari elemen | misalnya form akan melakukan action\n\n    setQuery(search);\n    setSearch('');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"search-bar\",\n    type: \"text\",\n    value: search // set nilai awal\n    ,\n    onChange: updateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"search-button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"div\", {\n    class: \"recipes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, recipes.map(recipe => // 3. passing data ke component Recipe.js\n  React.createElement(Recipe, {\n    key: recipe.recipe.label,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/charles/Documents/ReactJS/Recipe-App/src/App.js"],"names":["React","useEffect","useState","Recipe","App","API_ID","API_KEY","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","response","fetch","data","json","hits","console","log","updateSearch","e","target","value","getSearch","preventDefault","map","recipe","label","calories","image","ingredients"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAMC,MAAM,GAAG,UAAf;AACA,QAAMC,OAAO,GAAG,kCAAhB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC,CALgB,CAK4B;;AAC5C,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CANgB,CAM0B;;AAC1C,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,SAAD,CAAlC,CAPgB,CAO+B;AAE/C;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT,CAXgB,CAaH;AAEb;;AACA,QAAME,UAAU,GAAG,YAAY;AAC7B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mCAAkCJ,KAAM,WAAUN,MAAO,YAAWC,OAAQ,EAA9E,CAA5B;AACA,UAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAT,IAAAA,UAAU,CAACQ,IAAI,CAACE,IAAN,CAAV,CAH6B,CAGN;;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB;AACD,GALD,CAhBgB,CAuBhB;;;AACA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACxBZ,IAAAA,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAGH,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF,GADqB,CACD;;AACpBd,IAAAA,QAAQ,CAACH,MAAD,CAAR;AACAC,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAJD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEe,SAAhB;AAA2B,IAAA,SAAS,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAEhB,MAHT,CAGiB;AAHjB;AAIE,IAAA,QAAQ,EAAEY,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF,EAYE;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,OAAO,CAACoB,GAAR,CAAYC,MAAM,IACjB;AACA,sBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,MAAM,CAACA,MAAP,CAAcC,KADrB;AAEE,IAAA,KAAK,EAAED,MAAM,CAACA,MAAP,CAAcC,KAFvB;AAGE,IAAA,QAAQ,EAAED,MAAM,CAACA,MAAP,CAAcE,QAH1B;AAIE,IAAA,KAAK,EAAEF,MAAM,CAACA,MAAP,CAAcG,KAJvB;AAKE,IAAA,WAAW,EAAEH,MAAM,CAACA,MAAP,CAAcI,WAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADH,CAZF,CADF;AA2BD,CA7DD;;AA+DA,eAAe5B,GAAf","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () => {\n\n  const API_ID = \"d7a5a694\";\n  const API_KEY = \"286e3bf218dfffc0781b1a3e14833cb5\";\n\n  const [recipes, setRecipes] = useState([]); //! recipe adalah data | setRecepies untuk men-set data / mencari data\n  const [search, setSearch] = useState(''); //! useState(default value | nilai awal)\n  const [query, setQuery] = useState('chicken'); //! property untuk Submit\n\n  // ! digunakan untuk fetch data, dimana setiap halaman di-reload maka useEffect dijalankan untuk mengambil data\n  // 2. jalankan method useEffect ketika halaman di-reload\n  useEffect(() => {\n    getRecipes();\n  }, [query]); // [query] adalah parameter untuk meng-update data otomatis ketika mengetikan di pencarian\n\n  // 1. Ambil data dari API\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits); // ! untuk men-set data dari API\n    console.log(data.hits);\n  }\n\n  // 4. set even | e adalah event\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  } \n\n  const getSearch = e => {\n    e.preventDefault(); // menghilangkan sifat asli dari elemen | misalnya form akan melakukan action\n    setQuery(search);\n    setSearch('');\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input\n          className=\"search-bar\"\n          type=\"text\"\n          value={search} // set nilai awal\n          onChange={updateSearch}\n        />\n        <button className=\"search-button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div class=\"recipes\">\n        {recipes.map(recipe => (\n          // 3. passing data ke component Recipe.js\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}